/*
* Copyright (c) 2022-2023, NVIDIA CORPORATION. All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a
* copy of this software and associated documentation files (the "Software"),
* to deal in the Software without restriction, including without limitation
* the rights to use, copy, modify, merge, publish, distribute, sublicense,
* and/or sell copies of the Software, and to permit persons to whom the
* Software is furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
* THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/
#pragma once

#include "rtx/pass/common_binding_indices.h"

// Constants

//#define UPDATE_NEE_CACHE_BINDING_CONSTANTS                                    15

// Inputs

// #define UPDATE_NEE_CACHE_BINDING_SHARED_FLAGS_INPUT                           1

// #define UPDATE_NEE_CACHE_BINDING_PRIMARY_VIRTUAL_WORLD_SHADING_NORMAL_INPUT   2
// #define UPDATE_NEE_CACHE_BINDING_PRIMARY_LINEAR_VIEW_Z_INPUT                  3
// #define UPDATE_NEE_CACHE_BINDING_PRIMARY_ALBEDO_INPUT                         4

// #define UPDATE_NEE_CACHE_BINDING_SECONDARY_VIRTUAL_WORLD_SHADING_NORMAL_INPUT 5
// #define UPDATE_NEE_CACHE_BINDING_SECONDARY_LINEAR_VIEW_Z_INPUT                6
// #define UPDATE_NEE_CACHE_BINDING_SECONDARY_ALBEDO_INPUT                       7
// #define UPDATE_NEE_CACHE_BINDING_INDIRECT_RADIANCE_HIT_DISTANCE_INPUT         8

// // Input/Outputs

// #define UPDATE_NEE_CACHE_BINDING_PRIMARY_DIRECT_DIFFUSE_RADIANCE_INPUT_OUTPUT           12
// #define UPDATE_NEE_CACHE_BINDING_PRIMARY_DIRECT_SPECULAR_RADIANCE_INPUT_OUTPUT          13
// #define UPDATE_NEE_CACHE_BINDING_PRIMARY_INDIRECT_DIFFUSE_RADIANCE_INPUT_OUTPUT         14
// #define UPDATE_NEE_CACHE_BINDING_PRIMARY_INDIRECT_SPECULAR_RADIANCE_INPUT_OUTPUT        15

// #define UPDATE_NEE_CACHE_BINDING_SECONDARY_COMBINED_DIFFUSE_RADIANCE_INPUT_OUTPUT       16
// #define UPDATE_NEE_CACHE_BINDING_SECONDARY_COMBINED_SPECULAR_RADIANCE_INPUT_OUTPUT      17

// Outputs

//#define UPDATE_NEE_CACHE_BINDING_DEBUG_VIEW_OUTPUT                  15

#define UPDATE_NEE_CACHE_BINDING_RADIANCE_CACHE 15
#define UPDATE_NEE_CACHE_BINDING_RADIANCE_CACHE_TASK 16


// Aliased Inputs/Outputs 
// #define UPDATE_NEE_CACHE_BINDING_ALIASED_DATA_0   30
// #define UPDATE_NEE_CACHE_BINDING_PRIMARY_BASE_REFLECTIVITY_INPUT  (UPDATE_NEE_CACHE_BINDING_ALIASED_DATA_0 + 0)
// #define UPDATE_NEE_CACHE_BINDING_PRIMARY_SPECULAR_ALBEDO_OUTPUT   (UPDATE_NEE_CACHE_BINDING_ALIASED_DATA_0 + 1)
// #define UPDATE_NEE_CACHE_BINDING_ALIASED_DATA_1   32
// #define UPDATE_NEE_CACHE_BINDING_SECONDARY_BASE_REFLECTIVITY_INPUT  (UPDATE_NEE_CACHE_BINDING_ALIASED_DATA_1 + 0)
// #define UPDATE_NEE_CACHE_BINDING_SECONDARY_SPECULAR_ALBEDO_OUTPUT   (UPDATE_NEE_CACHE_BINDING_ALIASED_DATA_1 + 1)
